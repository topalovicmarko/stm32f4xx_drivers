
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004f4  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000688  08000690  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000688  08000688  00001690  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000688  08000688  00001690  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000688  08000690  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000688  08000688  00001688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800068c  0800068c  0000168c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001690  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000690  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000690  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00001690  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000087e  00000000  00000000  000016ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000278  00000000  00000000  00001f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  000021b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000007e  00000000  00000000  00002268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000139a  00000000  00000000  000022e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000d26  00000000  00000000  00003680  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000053f9  00000000  00000000  000043a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000979f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  000097e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  00009a08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000670 	.word	0x08000670

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000670 	.word	0x08000670

080001d4 <delay>:
 */

#include "stm32f401xx.h"

void delay(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000 ; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	@ (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	bc80      	pop	{r7}
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	0007a11f 	.word	0x0007a11f

08000200 <main>:

int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b084      	sub	sp, #16
 8000204:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOA;
 8000206:	4b0e      	ldr	r3, [pc, #56]	@ (8000240 <main+0x40>)
 8000208:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800020a:	2305      	movs	r3, #5
 800020c:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800020e:	2301      	movs	r3, #1
 8000210:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000212:	2302      	movs	r3, #2
 8000214:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000216:	2300      	movs	r3, #0
 8000218:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021a:	2300      	movs	r3, #0
 800021c:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800021e:	2101      	movs	r1, #1
 8000220:	4807      	ldr	r0, [pc, #28]	@ (8000240 <main+0x40>)
 8000222:	f000 f839 	bl	8000298 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000226:	1d3b      	adds	r3, r7, #4
 8000228:	4618      	mov	r0, r3
 800022a:	f000 f91d 	bl	8000468 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA, 5);
 800022e:	2105      	movs	r1, #5
 8000230:	4803      	ldr	r0, [pc, #12]	@ (8000240 <main+0x40>)
 8000232:	f000 f9e4 	bl	80005fe <GPIO_ToggleOutputPin>
		delay();
 8000236:	f7ff ffcd 	bl	80001d4 <delay>
		GPIO_ToggleOutputPin(GPIOA, 5);
 800023a:	bf00      	nop
 800023c:	e7f7      	b.n	800022e <main+0x2e>
 800023e:	bf00      	nop
 8000240:	40020000 	.word	0x40020000

08000244 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000244:	480d      	ldr	r0, [pc, #52]	@ (800027c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000246:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000248:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800024c:	480c      	ldr	r0, [pc, #48]	@ (8000280 <LoopForever+0x6>)
  ldr r1, =_edata
 800024e:	490d      	ldr	r1, [pc, #52]	@ (8000284 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000250:	4a0d      	ldr	r2, [pc, #52]	@ (8000288 <LoopForever+0xe>)
  movs r3, #0
 8000252:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000254:	e002      	b.n	800025c <LoopCopyDataInit>

08000256 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000256:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000258:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025a:	3304      	adds	r3, #4

0800025c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800025c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000260:	d3f9      	bcc.n	8000256 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000262:	4a0a      	ldr	r2, [pc, #40]	@ (800028c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000264:	4c0a      	ldr	r4, [pc, #40]	@ (8000290 <LoopForever+0x16>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000268:	e001      	b.n	800026e <LoopFillZerobss>

0800026a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800026c:	3204      	adds	r2, #4

0800026e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000270:	d3fb      	bcc.n	800026a <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 8000272:	f000 f9d9 	bl	8000628 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000276:	f7ff ffc3 	bl	8000200 <main>

0800027a <LoopForever>:

LoopForever:
  b LoopForever
 800027a:	e7fe      	b.n	800027a <LoopForever>
  ldr   r0, =_estack
 800027c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000280:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000284:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000288:	08000690 	.word	0x08000690
  ldr r2, =_sbss
 800028c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000290:	2000001c 	.word	0x2000001c

08000294 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000294:	e7fe      	b.n	8000294 <ADC_IRQHandler>
	...

08000298 <GPIO_PeriClockControl>:
 *
 * @Note			-	none
 *
 *******************************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000298:	b480      	push	{r7}
 800029a:	b083      	sub	sp, #12
 800029c:	af00      	add	r7, sp, #0
 800029e:	6078      	str	r0, [r7, #4]
 80002a0:	460b      	mov	r3, r1
 80002a2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002a4:	78fb      	ldrb	r3, [r7, #3]
 80002a6:	2b01      	cmp	r3, #1
 80002a8:	d162      	bne.n	8000370 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a64      	ldr	r2, [pc, #400]	@ (8000440 <GPIO_PeriClockControl+0x1a8>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002b2:	4b64      	ldr	r3, [pc, #400]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002b6:	4a63      	ldr	r2, [pc, #396]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002b8:	f043 0301 	orr.w	r3, r3, #1
 80002bc:	6313      	str	r3, [r2, #48]	@ 0x30
				}else if (pGPIOx == GPIOI)
				{
					GPIOI_PCLK_DI();
				}
	}
}
 80002be:	e0b9      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a61      	ldr	r2, [pc, #388]	@ (8000448 <GPIO_PeriClockControl+0x1b0>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002c8:	4b5e      	ldr	r3, [pc, #376]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002cc:	4a5d      	ldr	r2, [pc, #372]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002ce:	f043 0302 	orr.w	r3, r3, #2
 80002d2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002d4:	e0ae      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a5c      	ldr	r2, [pc, #368]	@ (800044c <GPIO_PeriClockControl+0x1b4>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002de:	4b59      	ldr	r3, [pc, #356]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e2:	4a58      	ldr	r2, [pc, #352]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002e4:	f043 0304 	orr.w	r3, r3, #4
 80002e8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ea:	e0a3      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a58      	ldr	r2, [pc, #352]	@ (8000450 <GPIO_PeriClockControl+0x1b8>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002f4:	4b53      	ldr	r3, [pc, #332]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f8:	4a52      	ldr	r2, [pc, #328]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80002fa:	f043 0308 	orr.w	r3, r3, #8
 80002fe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000300:	e098      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a53      	ldr	r2, [pc, #332]	@ (8000454 <GPIO_PeriClockControl+0x1bc>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800030a:	4b4e      	ldr	r3, [pc, #312]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800030e:	4a4d      	ldr	r2, [pc, #308]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000310:	f043 0310 	orr.w	r3, r3, #16
 8000314:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000316:	e08d      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a4f      	ldr	r2, [pc, #316]	@ (8000458 <GPIO_PeriClockControl+0x1c0>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000320:	4b48      	ldr	r3, [pc, #288]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000324:	4a47      	ldr	r2, [pc, #284]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000326:	f043 0320 	orr.w	r3, r3, #32
 800032a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800032c:	e082      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a4a      	ldr	r2, [pc, #296]	@ (800045c <GPIO_PeriClockControl+0x1c4>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000336:	4b43      	ldr	r3, [pc, #268]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800033a:	4a42      	ldr	r2, [pc, #264]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800033c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000340:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000342:	e077      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a46      	ldr	r2, [pc, #280]	@ (8000460 <GPIO_PeriClockControl+0x1c8>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800034c:	4b3d      	ldr	r3, [pc, #244]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000350:	4a3c      	ldr	r2, [pc, #240]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000352:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000356:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000358:	e06c      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a41      	ldr	r2, [pc, #260]	@ (8000464 <GPIO_PeriClockControl+0x1cc>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d168      	bne.n	8000434 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000362:	4b38      	ldr	r3, [pc, #224]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000366:	4a37      	ldr	r2, [pc, #220]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000368:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800036c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800036e:	e061      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a33      	ldr	r2, [pc, #204]	@ (8000440 <GPIO_PeriClockControl+0x1a8>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 8000378:	4b32      	ldr	r3, [pc, #200]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800037c:	4a31      	ldr	r2, [pc, #196]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800037e:	f023 0301 	bic.w	r3, r3, #1
 8000382:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000384:	e056      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOB)
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a2f      	ldr	r2, [pc, #188]	@ (8000448 <GPIO_PeriClockControl+0x1b0>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 800038e:	4b2d      	ldr	r3, [pc, #180]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000392:	4a2c      	ldr	r2, [pc, #176]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000394:	f023 0302 	bic.w	r3, r3, #2
 8000398:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800039a:	e04b      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOC)
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a2b      	ldr	r2, [pc, #172]	@ (800044c <GPIO_PeriClockControl+0x1b4>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 80003a4:	4b27      	ldr	r3, [pc, #156]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a8:	4a26      	ldr	r2, [pc, #152]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003aa:	f023 0304 	bic.w	r3, r3, #4
 80003ae:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b0:	e040      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOD)
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a26      	ldr	r2, [pc, #152]	@ (8000450 <GPIO_PeriClockControl+0x1b8>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 80003ba:	4b22      	ldr	r3, [pc, #136]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003be:	4a21      	ldr	r2, [pc, #132]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003c0:	f023 0308 	bic.w	r3, r3, #8
 80003c4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c6:	e035      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOE)
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a22      	ldr	r2, [pc, #136]	@ (8000454 <GPIO_PeriClockControl+0x1bc>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d106      	bne.n	80003de <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 80003d0:	4b1c      	ldr	r3, [pc, #112]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d4:	4a1b      	ldr	r2, [pc, #108]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003d6:	f023 0310 	bic.w	r3, r3, #16
 80003da:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003dc:	e02a      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOF)
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a1d      	ldr	r2, [pc, #116]	@ (8000458 <GPIO_PeriClockControl+0x1c0>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d106      	bne.n	80003f4 <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 80003e6:	4b17      	ldr	r3, [pc, #92]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ea:	4a16      	ldr	r2, [pc, #88]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003ec:	f023 0320 	bic.w	r3, r3, #32
 80003f0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f2:	e01f      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOG)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a19      	ldr	r2, [pc, #100]	@ (800045c <GPIO_PeriClockControl+0x1c4>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d106      	bne.n	800040a <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 80003fc:	4b11      	ldr	r3, [pc, #68]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000400:	4a10      	ldr	r2, [pc, #64]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000402:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000406:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000408:	e014      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOH)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a14      	ldr	r2, [pc, #80]	@ (8000460 <GPIO_PeriClockControl+0x1c8>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d106      	bne.n	8000420 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 8000412:	4b0c      	ldr	r3, [pc, #48]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000414:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000416:	4a0b      	ldr	r2, [pc, #44]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 8000418:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800041c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800041e:	e009      	b.n	8000434 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOI)
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a10      	ldr	r2, [pc, #64]	@ (8000464 <GPIO_PeriClockControl+0x1cc>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d105      	bne.n	8000434 <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 8000428:	4b06      	ldr	r3, [pc, #24]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800042c:	4a05      	ldr	r2, [pc, #20]	@ (8000444 <GPIO_PeriClockControl+0x1ac>)
 800042e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000432:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000434:	bf00      	nop
 8000436:	370c      	adds	r7, #12
 8000438:	46bd      	mov	sp, r7
 800043a:	bc80      	pop	{r7}
 800043c:	4770      	bx	lr
 800043e:	bf00      	nop
 8000440:	40020000 	.word	0x40020000
 8000444:	40023800 	.word	0x40023800
 8000448:	40020400 	.word	0x40020400
 800044c:	40020800 	.word	0x40020800
 8000450:	40020c00 	.word	0x40020c00
 8000454:	40021000 	.word	0x40021000
 8000458:	40021400 	.word	0x40021400
 800045c:	40021800 	.word	0x40021800
 8000460:	40021c00 	.word	0x40021c00
 8000464:	40022000 	.word	0x40022000

08000468 <GPIO_Init>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle )
{
 8000468:	b480      	push	{r7}
 800046a:	b085      	sub	sp, #20
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;	//temp. register
 8000470:	2300      	movs	r3, #0
 8000472:	60fb      	str	r3, [r7, #12]

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	795b      	ldrb	r3, [r3, #5]
 8000478:	2b03      	cmp	r3, #3
 800047a:	d81f      	bhi.n	80004bc <GPIO_Init+0x54>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	795b      	ldrb	r3, [r3, #5]
 8000480:	461a      	mov	r2, r3
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	791b      	ldrb	r3, [r3, #4]
 8000486:	005b      	lsls	r3, r3, #1
 8000488:	fa02 f303 	lsl.w	r3, r2, r3
 800048c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	681a      	ldr	r2, [r3, #0]
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	791b      	ldrb	r3, [r3, #4]
 8000498:	005b      	lsls	r3, r3, #1
 800049a:	2103      	movs	r1, #3
 800049c:	fa01 f303 	lsl.w	r3, r1, r3
 80004a0:	43db      	mvns	r3, r3
 80004a2:	4619      	mov	r1, r3
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	400a      	ands	r2, r1
 80004aa:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;	//setting
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	6819      	ldr	r1, [r3, #0]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	68fa      	ldr	r2, [r7, #12]
 80004b8:	430a      	orrs	r2, r1
 80004ba:	601a      	str	r2, [r3, #0]
	}
	else
	{
		//interrupt mode
	}
	temp = 0;
 80004bc:	2300      	movs	r3, #0
 80004be:	60fb      	str	r3, [r7, #12]

	//2. configure the speed
	temp = 0;
 80004c0:	2300      	movs	r3, #0
 80004c2:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	799b      	ldrb	r3, [r3, #6]
 80004c8:	461a      	mov	r2, r3
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	791b      	ldrb	r3, [r3, #4]
 80004ce:	005b      	lsls	r3, r3, #1
 80004d0:	fa02 f303 	lsl.w	r3, r2, r3
 80004d4:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	689a      	ldr	r2, [r3, #8]
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	791b      	ldrb	r3, [r3, #4]
 80004e0:	005b      	lsls	r3, r3, #1
 80004e2:	2103      	movs	r1, #3
 80004e4:	fa01 f303 	lsl.w	r3, r1, r3
 80004e8:	43db      	mvns	r3, r3
 80004ea:	4619      	mov	r1, r3
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	400a      	ands	r2, r1
 80004f2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	6899      	ldr	r1, [r3, #8]
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	68fa      	ldr	r2, [r7, #12]
 8000500:	430a      	orrs	r2, r1
 8000502:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000504:	2300      	movs	r3, #0
 8000506:	60fb      	str	r3, [r7, #12]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	79db      	ldrb	r3, [r3, #7]
 800050c:	461a      	mov	r2, r3
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	791b      	ldrb	r3, [r3, #4]
 8000512:	005b      	lsls	r3, r3, #1
 8000514:	fa02 f303 	lsl.w	r3, r2, r3
 8000518:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	68da      	ldr	r2, [r3, #12]
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	791b      	ldrb	r3, [r3, #4]
 8000524:	005b      	lsls	r3, r3, #1
 8000526:	2103      	movs	r1, #3
 8000528:	fa01 f303 	lsl.w	r3, r1, r3
 800052c:	43db      	mvns	r3, r3
 800052e:	4619      	mov	r1, r3
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	400a      	ands	r2, r1
 8000536:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	68d9      	ldr	r1, [r3, #12]
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	68fa      	ldr	r2, [r7, #12]
 8000544:	430a      	orrs	r2, r1
 8000546:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000548:	2300      	movs	r3, #0
 800054a:	60fb      	str	r3, [r7, #12]

	//4. configure optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	7a1b      	ldrb	r3, [r3, #8]
 8000550:	461a      	mov	r2, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	791b      	ldrb	r3, [r3, #4]
 8000556:	fa02 f303 	lsl.w	r3, r2, r3
 800055a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	685a      	ldr	r2, [r3, #4]
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	791b      	ldrb	r3, [r3, #4]
 8000566:	4619      	mov	r1, r3
 8000568:	2301      	movs	r3, #1
 800056a:	408b      	lsls	r3, r1
 800056c:	43db      	mvns	r3, r3
 800056e:	4619      	mov	r1, r3
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	400a      	ands	r2, r1
 8000576:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	6859      	ldr	r1, [r3, #4]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	68fa      	ldr	r2, [r7, #12]
 8000584:	430a      	orrs	r2, r1
 8000586:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTF)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	795b      	ldrb	r3, [r3, #5]
 800058c:	2b02      	cmp	r3, #2
 800058e:	d131      	bne.n	80005f4 <GPIO_Init+0x18c>
	{
		//configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	08db      	lsrs	r3, r3, #3
 8000596:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	f003 0307 	and.w	r3, r3, #7
 80005a0:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << ( 4 * temp2 ) );
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	7afa      	ldrb	r2, [r7, #11]
 80005a8:	3208      	adds	r2, #8
 80005aa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005ae:	7abb      	ldrb	r3, [r7, #10]
 80005b0:	009b      	lsls	r3, r3, #2
 80005b2:	220f      	movs	r2, #15
 80005b4:	fa02 f303 	lsl.w	r3, r2, r3
 80005b8:	43db      	mvns	r3, r3
 80005ba:	4618      	mov	r0, r3
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	7afa      	ldrb	r2, [r7, #11]
 80005c2:	4001      	ands	r1, r0
 80005c4:	3208      	adds	r2, #8
 80005c6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= ( pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	7afa      	ldrb	r2, [r7, #11]
 80005d0:	3208      	adds	r2, #8
 80005d2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	7a5b      	ldrb	r3, [r3, #9]
 80005da:	461a      	mov	r2, r3
 80005dc:	7abb      	ldrb	r3, [r7, #10]
 80005de:	009b      	lsls	r3, r3, #2
 80005e0:	fa02 f303 	lsl.w	r3, r2, r3
 80005e4:	4618      	mov	r0, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	7afa      	ldrb	r2, [r7, #11]
 80005ec:	4301      	orrs	r1, r0
 80005ee:	3208      	adds	r2, #8
 80005f0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80005f4:	bf00      	nop
 80005f6:	3714      	adds	r7, #20
 80005f8:	46bd      	mov	sp, r7
 80005fa:	bc80      	pop	{r7}
 80005fc:	4770      	bx	lr

080005fe <GPIO_ToggleOutputPin>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005fe:	b480      	push	{r7}
 8000600:	b083      	sub	sp, #12
 8000602:	af00      	add	r7, sp, #0
 8000604:	6078      	str	r0, [r7, #4]
 8000606:	460b      	mov	r3, r1
 8000608:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber );
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	695b      	ldr	r3, [r3, #20]
 800060e:	78fa      	ldrb	r2, [r7, #3]
 8000610:	2101      	movs	r1, #1
 8000612:	fa01 f202 	lsl.w	r2, r1, r2
 8000616:	405a      	eors	r2, r3
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	615a      	str	r2, [r3, #20]
}
 800061c:	bf00      	nop
 800061e:	370c      	adds	r7, #12
 8000620:	46bd      	mov	sp, r7
 8000622:	bc80      	pop	{r7}
 8000624:	4770      	bx	lr
	...

08000628 <__libc_init_array>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	4d0d      	ldr	r5, [pc, #52]	@ (8000660 <__libc_init_array+0x38>)
 800062c:	4c0d      	ldr	r4, [pc, #52]	@ (8000664 <__libc_init_array+0x3c>)
 800062e:	1b64      	subs	r4, r4, r5
 8000630:	10a4      	asrs	r4, r4, #2
 8000632:	2600      	movs	r6, #0
 8000634:	42a6      	cmp	r6, r4
 8000636:	d109      	bne.n	800064c <__libc_init_array+0x24>
 8000638:	4d0b      	ldr	r5, [pc, #44]	@ (8000668 <__libc_init_array+0x40>)
 800063a:	4c0c      	ldr	r4, [pc, #48]	@ (800066c <__libc_init_array+0x44>)
 800063c:	f000 f818 	bl	8000670 <_init>
 8000640:	1b64      	subs	r4, r4, r5
 8000642:	10a4      	asrs	r4, r4, #2
 8000644:	2600      	movs	r6, #0
 8000646:	42a6      	cmp	r6, r4
 8000648:	d105      	bne.n	8000656 <__libc_init_array+0x2e>
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000650:	4798      	blx	r3
 8000652:	3601      	adds	r6, #1
 8000654:	e7ee      	b.n	8000634 <__libc_init_array+0xc>
 8000656:	f855 3b04 	ldr.w	r3, [r5], #4
 800065a:	4798      	blx	r3
 800065c:	3601      	adds	r6, #1
 800065e:	e7f2      	b.n	8000646 <__libc_init_array+0x1e>
 8000660:	08000688 	.word	0x08000688
 8000664:	08000688 	.word	0x08000688
 8000668:	08000688 	.word	0x08000688
 800066c:	0800068c 	.word	0x0800068c

08000670 <_init>:
 8000670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000672:	bf00      	nop
 8000674:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000676:	bc08      	pop	{r3}
 8000678:	469e      	mov	lr, r3
 800067a:	4770      	bx	lr

0800067c <_fini>:
 800067c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067e:	bf00      	nop
 8000680:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000682:	bc08      	pop	{r3}
 8000684:	469e      	mov	lr, r3
 8000686:	4770      	bx	lr
