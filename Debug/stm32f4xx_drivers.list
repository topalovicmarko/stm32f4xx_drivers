
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006f8  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800088c  08000894  00001894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800088c  0800088c  00001894  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800088c  0800088c  00001894  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800088c  08000894  00001894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800088c  0800088c  0000188c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000890  08000890  00001890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000894  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000894  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00001894  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a09  00000000  00000000  000018be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002ad  00000000  00000000  000022c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00002578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000085  00000000  00000000  00002638  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000145f  00000000  00000000  000026bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000f71  00000000  00000000  00003b1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005911  00000000  00000000  00004a8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000a39e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  0000a3e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  0000a630  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000874 	.word	0x08000874

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000874 	.word	0x08000874

080001d4 <delay>:

#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000/2 ; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	@ (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	bc80      	pop	{r7}
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	0003d08f 	.word	0x0003d08f

08000200 <main>:

int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GpioBtn;

	//This is Led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000206:	4b1a      	ldr	r3, [pc, #104]	@ (8000270 <main+0x70>)
 8000208:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 800020a:	2308      	movs	r3, #8
 800020c:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800020e:	2301      	movs	r3, #1
 8000210:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000212:	2302      	movs	r3, #2
 8000214:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000216:	2300      	movs	r3, #0
 8000218:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021a:	2300      	movs	r3, #0
 800021c:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800021e:	2101      	movs	r1, #1
 8000220:	4813      	ldr	r0, [pc, #76]	@ (8000270 <main+0x70>)
 8000222:	f000 f853 	bl	80002cc <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000226:	f107 030c 	add.w	r3, r7, #12
 800022a:	4618      	mov	r0, r3
 800022c:	f000 f936 	bl	800049c <GPIO_Init>

	//This is btn gpio configuration
	GpioBtn.pGPIOx = GPIOB;
 8000230:	4b10      	ldr	r3, [pc, #64]	@ (8000274 <main+0x74>)
 8000232:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000234:	230c      	movs	r3, #12
 8000236:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000238:	2300      	movs	r3, #0
 800023a:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800023c:	2302      	movs	r3, #2
 800023e:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000240:	2301      	movs	r3, #1
 8000242:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 8000244:	2101      	movs	r1, #1
 8000246:	480b      	ldr	r0, [pc, #44]	@ (8000274 <main+0x74>)
 8000248:	f000 f840 	bl	80002cc <GPIO_PeriClockControl>

	GPIO_Init(&GpioBtn);
 800024c:	463b      	mov	r3, r7
 800024e:	4618      	mov	r0, r3
 8000250:	f000 f924 	bl	800049c <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BTN_PRESSED)
 8000254:	210c      	movs	r1, #12
 8000256:	4807      	ldr	r0, [pc, #28]	@ (8000274 <main+0x74>)
 8000258:	f000 fabe 	bl	80007d8 <GPIO_ReadFromInputPin>
 800025c:	4603      	mov	r3, r0
 800025e:	2b00      	cmp	r3, #0
 8000260:	d1f8      	bne.n	8000254 <main+0x54>
		{
			delay();
 8000262:	f7ff ffb7 	bl	80001d4 <delay>
			GPIO_ToggleOutputPin(GPIOA, 8);
 8000266:	2108      	movs	r1, #8
 8000268:	4801      	ldr	r0, [pc, #4]	@ (8000270 <main+0x70>)
 800026a:	f000 faca 	bl	8000802 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BTN_PRESSED)
 800026e:	e7f1      	b.n	8000254 <main+0x54>
 8000270:	40020000 	.word	0x40020000
 8000274:	40020400 	.word	0x40020400

08000278 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000278:	480d      	ldr	r0, [pc, #52]	@ (80002b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800027c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000280:	480c      	ldr	r0, [pc, #48]	@ (80002b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000282:	490d      	ldr	r1, [pc, #52]	@ (80002b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000284:	4a0d      	ldr	r2, [pc, #52]	@ (80002bc <LoopForever+0xe>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0a      	ldr	r2, [pc, #40]	@ (80002c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000298:	4c0a      	ldr	r4, [pc, #40]	@ (80002c4 <LoopForever+0x16>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80002a6:	f000 fac1 	bl	800082c <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80002aa:	f7ff ffa9 	bl	8000200 <main>

080002ae <LoopForever>:

LoopForever:
  b LoopForever
 80002ae:	e7fe      	b.n	80002ae <LoopForever>
  ldr   r0, =_estack
 80002b0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002bc:	08000894 	.word	0x08000894
  ldr r2, =_sbss
 80002c0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c4:	2000001c 	.word	0x2000001c

080002c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c8:	e7fe      	b.n	80002c8 <ADC_IRQHandler>
	...

080002cc <GPIO_PeriClockControl>:
 *
 * @Note			-	none
 *
 *******************************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002cc:	b480      	push	{r7}
 80002ce:	b083      	sub	sp, #12
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	460b      	mov	r3, r1
 80002d6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002d8:	78fb      	ldrb	r3, [r7, #3]
 80002da:	2b01      	cmp	r3, #1
 80002dc:	d162      	bne.n	80003a4 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a64      	ldr	r2, [pc, #400]	@ (8000474 <GPIO_PeriClockControl+0x1a8>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002e6:	4b64      	ldr	r3, [pc, #400]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80002e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ea:	4a63      	ldr	r2, [pc, #396]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80002ec:	f043 0301 	orr.w	r3, r3, #1
 80002f0:	6313      	str	r3, [r2, #48]	@ 0x30
				}else if (pGPIOx == GPIOI)
				{
					GPIOI_PCLK_DI();
				}
	}
}
 80002f2:	e0b9      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a61      	ldr	r2, [pc, #388]	@ (800047c <GPIO_PeriClockControl+0x1b0>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002fc:	4b5e      	ldr	r3, [pc, #376]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80002fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000300:	4a5d      	ldr	r2, [pc, #372]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000302:	f043 0302 	orr.w	r3, r3, #2
 8000306:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000308:	e0ae      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a5c      	ldr	r2, [pc, #368]	@ (8000480 <GPIO_PeriClockControl+0x1b4>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000312:	4b59      	ldr	r3, [pc, #356]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000316:	4a58      	ldr	r2, [pc, #352]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000318:	f043 0304 	orr.w	r3, r3, #4
 800031c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800031e:	e0a3      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a58      	ldr	r2, [pc, #352]	@ (8000484 <GPIO_PeriClockControl+0x1b8>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000328:	4b53      	ldr	r3, [pc, #332]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800032c:	4a52      	ldr	r2, [pc, #328]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800032e:	f043 0308 	orr.w	r3, r3, #8
 8000332:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000334:	e098      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a53      	ldr	r2, [pc, #332]	@ (8000488 <GPIO_PeriClockControl+0x1bc>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800033e:	4b4e      	ldr	r3, [pc, #312]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000342:	4a4d      	ldr	r2, [pc, #308]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000344:	f043 0310 	orr.w	r3, r3, #16
 8000348:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800034a:	e08d      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a4f      	ldr	r2, [pc, #316]	@ (800048c <GPIO_PeriClockControl+0x1c0>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000354:	4b48      	ldr	r3, [pc, #288]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000358:	4a47      	ldr	r2, [pc, #284]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800035a:	f043 0320 	orr.w	r3, r3, #32
 800035e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000360:	e082      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a4a      	ldr	r2, [pc, #296]	@ (8000490 <GPIO_PeriClockControl+0x1c4>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800036a:	4b43      	ldr	r3, [pc, #268]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036e:	4a42      	ldr	r2, [pc, #264]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000370:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000374:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000376:	e077      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a46      	ldr	r2, [pc, #280]	@ (8000494 <GPIO_PeriClockControl+0x1c8>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000380:	4b3d      	ldr	r3, [pc, #244]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000384:	4a3c      	ldr	r2, [pc, #240]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000386:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800038a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800038c:	e06c      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a41      	ldr	r2, [pc, #260]	@ (8000498 <GPIO_PeriClockControl+0x1cc>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d168      	bne.n	8000468 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000396:	4b38      	ldr	r3, [pc, #224]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800039a:	4a37      	ldr	r2, [pc, #220]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800039c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003a0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a2:	e061      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a33      	ldr	r2, [pc, #204]	@ (8000474 <GPIO_PeriClockControl+0x1a8>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 80003ac:	4b32      	ldr	r3, [pc, #200]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b0:	4a31      	ldr	r2, [pc, #196]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003b2:	f023 0301 	bic.w	r3, r3, #1
 80003b6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b8:	e056      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOB)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a2f      	ldr	r2, [pc, #188]	@ (800047c <GPIO_PeriClockControl+0x1b0>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 80003c2:	4b2d      	ldr	r3, [pc, #180]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c6:	4a2c      	ldr	r2, [pc, #176]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003c8:	f023 0302 	bic.w	r3, r3, #2
 80003cc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ce:	e04b      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOC)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a2b      	ldr	r2, [pc, #172]	@ (8000480 <GPIO_PeriClockControl+0x1b4>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 80003d8:	4b27      	ldr	r3, [pc, #156]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003dc:	4a26      	ldr	r2, [pc, #152]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003de:	f023 0304 	bic.w	r3, r3, #4
 80003e2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e4:	e040      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOD)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a26      	ldr	r2, [pc, #152]	@ (8000484 <GPIO_PeriClockControl+0x1b8>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 80003ee:	4b22      	ldr	r3, [pc, #136]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f2:	4a21      	ldr	r2, [pc, #132]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 80003f4:	f023 0308 	bic.w	r3, r3, #8
 80003f8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003fa:	e035      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOE)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a22      	ldr	r2, [pc, #136]	@ (8000488 <GPIO_PeriClockControl+0x1bc>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 8000404:	4b1c      	ldr	r3, [pc, #112]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000408:	4a1b      	ldr	r2, [pc, #108]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800040a:	f023 0310 	bic.w	r3, r3, #16
 800040e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000410:	e02a      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOF)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a1d      	ldr	r2, [pc, #116]	@ (800048c <GPIO_PeriClockControl+0x1c0>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 800041a:	4b17      	ldr	r3, [pc, #92]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041e:	4a16      	ldr	r2, [pc, #88]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000420:	f023 0320 	bic.w	r3, r3, #32
 8000424:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000426:	e01f      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOG)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a19      	ldr	r2, [pc, #100]	@ (8000490 <GPIO_PeriClockControl+0x1c4>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d106      	bne.n	800043e <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 8000430:	4b11      	ldr	r3, [pc, #68]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000434:	4a10      	ldr	r2, [pc, #64]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000436:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800043a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800043c:	e014      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOH)
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a14      	ldr	r2, [pc, #80]	@ (8000494 <GPIO_PeriClockControl+0x1c8>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d106      	bne.n	8000454 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 8000446:	4b0c      	ldr	r3, [pc, #48]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000448:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800044a:	4a0b      	ldr	r2, [pc, #44]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800044c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000450:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000452:	e009      	b.n	8000468 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOI)
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	4a10      	ldr	r2, [pc, #64]	@ (8000498 <GPIO_PeriClockControl+0x1cc>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d105      	bne.n	8000468 <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 800045c:	4b06      	ldr	r3, [pc, #24]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 800045e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000460:	4a05      	ldr	r2, [pc, #20]	@ (8000478 <GPIO_PeriClockControl+0x1ac>)
 8000462:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000466:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000468:	bf00      	nop
 800046a:	370c      	adds	r7, #12
 800046c:	46bd      	mov	sp, r7
 800046e:	bc80      	pop	{r7}
 8000470:	4770      	bx	lr
 8000472:	bf00      	nop
 8000474:	40020000 	.word	0x40020000
 8000478:	40023800 	.word	0x40023800
 800047c:	40020400 	.word	0x40020400
 8000480:	40020800 	.word	0x40020800
 8000484:	40020c00 	.word	0x40020c00
 8000488:	40021000 	.word	0x40021000
 800048c:	40021400 	.word	0x40021400
 8000490:	40021800 	.word	0x40021800
 8000494:	40021c00 	.word	0x40021c00
 8000498:	40022000 	.word	0x40022000

0800049c <GPIO_Init>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle )
{
 800049c:	b480      	push	{r7}
 800049e:	b087      	sub	sp, #28
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;	//temp. register
 80004a4:	2300      	movs	r3, #0
 80004a6:	617b      	str	r3, [r7, #20]

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b03      	cmp	r3, #3
 80004ae:	d820      	bhi.n	80004f2 <GPIO_Init+0x56>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	795b      	ldrb	r3, [r3, #5]
 80004b4:	461a      	mov	r2, r3
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	791b      	ldrb	r3, [r3, #4]
 80004ba:	005b      	lsls	r3, r3, #1
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	681a      	ldr	r2, [r3, #0]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	005b      	lsls	r3, r3, #1
 80004ce:	2103      	movs	r1, #3
 80004d0:	fa01 f303 	lsl.w	r3, r1, r3
 80004d4:	43db      	mvns	r3, r3
 80004d6:	4619      	mov	r1, r3
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	400a      	ands	r2, r1
 80004de:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;	//setting
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	6819      	ldr	r1, [r3, #0]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	697a      	ldr	r2, [r7, #20]
 80004ec:	430a      	orrs	r2, r1
 80004ee:	601a      	str	r2, [r3, #0]
 80004f0:	e0cb      	b.n	800068a <GPIO_Init+0x1ee>
	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	795b      	ldrb	r3, [r3, #5]
 80004f6:	2b04      	cmp	r3, #4
 80004f8:	d117      	bne.n	800052a <GPIO_Init+0x8e>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80004fa:	4b4b      	ldr	r3, [pc, #300]	@ (8000628 <GPIO_Init+0x18c>)
 80004fc:	68db      	ldr	r3, [r3, #12]
 80004fe:	687a      	ldr	r2, [r7, #4]
 8000500:	7912      	ldrb	r2, [r2, #4]
 8000502:	4611      	mov	r1, r2
 8000504:	2201      	movs	r2, #1
 8000506:	408a      	lsls	r2, r1
 8000508:	4611      	mov	r1, r2
 800050a:	4a47      	ldr	r2, [pc, #284]	@ (8000628 <GPIO_Init+0x18c>)
 800050c:	430b      	orrs	r3, r1
 800050e:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000510:	4b45      	ldr	r3, [pc, #276]	@ (8000628 <GPIO_Init+0x18c>)
 8000512:	689b      	ldr	r3, [r3, #8]
 8000514:	687a      	ldr	r2, [r7, #4]
 8000516:	7912      	ldrb	r2, [r2, #4]
 8000518:	4611      	mov	r1, r2
 800051a:	2201      	movs	r2, #1
 800051c:	408a      	lsls	r2, r1
 800051e:	43d2      	mvns	r2, r2
 8000520:	4611      	mov	r1, r2
 8000522:	4a41      	ldr	r2, [pc, #260]	@ (8000628 <GPIO_Init+0x18c>)
 8000524:	400b      	ands	r3, r1
 8000526:	6093      	str	r3, [r2, #8]
 8000528:	e035      	b.n	8000596 <GPIO_Init+0xfa>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	795b      	ldrb	r3, [r3, #5]
 800052e:	2b05      	cmp	r3, #5
 8000530:	d117      	bne.n	8000562 <GPIO_Init+0xc6>
		{
			//1. configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000532:	4b3d      	ldr	r3, [pc, #244]	@ (8000628 <GPIO_Init+0x18c>)
 8000534:	689b      	ldr	r3, [r3, #8]
 8000536:	687a      	ldr	r2, [r7, #4]
 8000538:	7912      	ldrb	r2, [r2, #4]
 800053a:	4611      	mov	r1, r2
 800053c:	2201      	movs	r2, #1
 800053e:	408a      	lsls	r2, r1
 8000540:	4611      	mov	r1, r2
 8000542:	4a39      	ldr	r2, [pc, #228]	@ (8000628 <GPIO_Init+0x18c>)
 8000544:	430b      	orrs	r3, r1
 8000546:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000548:	4b37      	ldr	r3, [pc, #220]	@ (8000628 <GPIO_Init+0x18c>)
 800054a:	68db      	ldr	r3, [r3, #12]
 800054c:	687a      	ldr	r2, [r7, #4]
 800054e:	7912      	ldrb	r2, [r2, #4]
 8000550:	4611      	mov	r1, r2
 8000552:	2201      	movs	r2, #1
 8000554:	408a      	lsls	r2, r1
 8000556:	43d2      	mvns	r2, r2
 8000558:	4611      	mov	r1, r2
 800055a:	4a33      	ldr	r2, [pc, #204]	@ (8000628 <GPIO_Init+0x18c>)
 800055c:	400b      	ands	r3, r1
 800055e:	60d3      	str	r3, [r2, #12]
 8000560:	e019      	b.n	8000596 <GPIO_Init+0xfa>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	795b      	ldrb	r3, [r3, #5]
 8000566:	2b06      	cmp	r3, #6
 8000568:	d115      	bne.n	8000596 <GPIO_Init+0xfa>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800056a:	4b2f      	ldr	r3, [pc, #188]	@ (8000628 <GPIO_Init+0x18c>)
 800056c:	689b      	ldr	r3, [r3, #8]
 800056e:	687a      	ldr	r2, [r7, #4]
 8000570:	7912      	ldrb	r2, [r2, #4]
 8000572:	4611      	mov	r1, r2
 8000574:	2201      	movs	r2, #1
 8000576:	408a      	lsls	r2, r1
 8000578:	4611      	mov	r1, r2
 800057a:	4a2b      	ldr	r2, [pc, #172]	@ (8000628 <GPIO_Init+0x18c>)
 800057c:	430b      	orrs	r3, r1
 800057e:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000580:	4b29      	ldr	r3, [pc, #164]	@ (8000628 <GPIO_Init+0x18c>)
 8000582:	68db      	ldr	r3, [r3, #12]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	4611      	mov	r1, r2
 8000590:	4a25      	ldr	r2, [pc, #148]	@ (8000628 <GPIO_Init+0x18c>)
 8000592:	430b      	orrs	r3, r1
 8000594:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	089b      	lsrs	r3, r3, #2
 800059c:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	791b      	ldrb	r3, [r3, #4]
 80005a2:	f003 0303 	and.w	r3, r3, #3
 80005a6:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	4a1f      	ldr	r2, [pc, #124]	@ (800062c <GPIO_Init+0x190>)
 80005ae:	4293      	cmp	r3, r2
 80005b0:	d04e      	beq.n	8000650 <GPIO_Init+0x1b4>
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	4a1e      	ldr	r2, [pc, #120]	@ (8000630 <GPIO_Init+0x194>)
 80005b8:	4293      	cmp	r3, r2
 80005ba:	d032      	beq.n	8000622 <GPIO_Init+0x186>
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	4a1c      	ldr	r2, [pc, #112]	@ (8000634 <GPIO_Init+0x198>)
 80005c2:	4293      	cmp	r3, r2
 80005c4:	d02b      	beq.n	800061e <GPIO_Init+0x182>
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	4a1b      	ldr	r2, [pc, #108]	@ (8000638 <GPIO_Init+0x19c>)
 80005cc:	4293      	cmp	r3, r2
 80005ce:	d024      	beq.n	800061a <GPIO_Init+0x17e>
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	4a19      	ldr	r2, [pc, #100]	@ (800063c <GPIO_Init+0x1a0>)
 80005d6:	4293      	cmp	r3, r2
 80005d8:	d01d      	beq.n	8000616 <GPIO_Init+0x17a>
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	4a18      	ldr	r2, [pc, #96]	@ (8000640 <GPIO_Init+0x1a4>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d016      	beq.n	8000612 <GPIO_Init+0x176>
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	4a16      	ldr	r2, [pc, #88]	@ (8000644 <GPIO_Init+0x1a8>)
 80005ea:	4293      	cmp	r3, r2
 80005ec:	d00f      	beq.n	800060e <GPIO_Init+0x172>
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	4a15      	ldr	r2, [pc, #84]	@ (8000648 <GPIO_Init+0x1ac>)
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d008      	beq.n	800060a <GPIO_Init+0x16e>
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	4a13      	ldr	r2, [pc, #76]	@ (800064c <GPIO_Init+0x1b0>)
 80005fe:	4293      	cmp	r3, r2
 8000600:	d101      	bne.n	8000606 <GPIO_Init+0x16a>
 8000602:	2308      	movs	r3, #8
 8000604:	e025      	b.n	8000652 <GPIO_Init+0x1b6>
 8000606:	2300      	movs	r3, #0
 8000608:	e023      	b.n	8000652 <GPIO_Init+0x1b6>
 800060a:	2307      	movs	r3, #7
 800060c:	e021      	b.n	8000652 <GPIO_Init+0x1b6>
 800060e:	2306      	movs	r3, #6
 8000610:	e01f      	b.n	8000652 <GPIO_Init+0x1b6>
 8000612:	2305      	movs	r3, #5
 8000614:	e01d      	b.n	8000652 <GPIO_Init+0x1b6>
 8000616:	2304      	movs	r3, #4
 8000618:	e01b      	b.n	8000652 <GPIO_Init+0x1b6>
 800061a:	2303      	movs	r3, #3
 800061c:	e019      	b.n	8000652 <GPIO_Init+0x1b6>
 800061e:	2302      	movs	r3, #2
 8000620:	e017      	b.n	8000652 <GPIO_Init+0x1b6>
 8000622:	2301      	movs	r3, #1
 8000624:	e015      	b.n	8000652 <GPIO_Init+0x1b6>
 8000626:	bf00      	nop
 8000628:	40013c00 	.word	0x40013c00
 800062c:	40020000 	.word	0x40020000
 8000630:	40020400 	.word	0x40020400
 8000634:	40020800 	.word	0x40020800
 8000638:	40020c00 	.word	0x40020c00
 800063c:	40021000 	.word	0x40021000
 8000640:	40021400 	.word	0x40021400
 8000644:	40021800 	.word	0x40021800
 8000648:	40021c00 	.word	0x40021c00
 800064c:	40022000 	.word	0x40022000
 8000650:	2300      	movs	r3, #0
 8000652:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000654:	4b5d      	ldr	r3, [pc, #372]	@ (80007cc <GPIO_Init+0x330>)
 8000656:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000658:	4a5c      	ldr	r2, [pc, #368]	@ (80007cc <GPIO_Init+0x330>)
 800065a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800065e:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000660:	7c7a      	ldrb	r2, [r7, #17]
 8000662:	7cbb      	ldrb	r3, [r7, #18]
 8000664:	009b      	lsls	r3, r3, #2
 8000666:	fa02 f103 	lsl.w	r1, r2, r3
 800066a:	4a59      	ldr	r2, [pc, #356]	@ (80007d0 <GPIO_Init+0x334>)
 800066c:	7cfb      	ldrb	r3, [r7, #19]
 800066e:	3302      	adds	r3, #2
 8000670:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the exti interrupt delivery using IMR
		EXTI -> IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000674:	4b57      	ldr	r3, [pc, #348]	@ (80007d4 <GPIO_Init+0x338>)
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	687a      	ldr	r2, [r7, #4]
 800067a:	7912      	ldrb	r2, [r2, #4]
 800067c:	4611      	mov	r1, r2
 800067e:	2201      	movs	r2, #1
 8000680:	408a      	lsls	r2, r1
 8000682:	4611      	mov	r1, r2
 8000684:	4a53      	ldr	r2, [pc, #332]	@ (80007d4 <GPIO_Init+0x338>)
 8000686:	430b      	orrs	r3, r1
 8000688:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 800068a:	2300      	movs	r3, #0
 800068c:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = 0;
 800068e:	2300      	movs	r3, #0
 8000690:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	799b      	ldrb	r3, [r3, #6]
 8000696:	461a      	mov	r2, r3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	791b      	ldrb	r3, [r3, #4]
 800069c:	005b      	lsls	r3, r3, #1
 800069e:	fa02 f303 	lsl.w	r3, r2, r3
 80006a2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	689a      	ldr	r2, [r3, #8]
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	791b      	ldrb	r3, [r3, #4]
 80006ae:	005b      	lsls	r3, r3, #1
 80006b0:	2103      	movs	r1, #3
 80006b2:	fa01 f303 	lsl.w	r3, r1, r3
 80006b6:	43db      	mvns	r3, r3
 80006b8:	4619      	mov	r1, r3
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	400a      	ands	r2, r1
 80006c0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	6899      	ldr	r1, [r3, #8]
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	697a      	ldr	r2, [r7, #20]
 80006ce:	430a      	orrs	r2, r1
 80006d0:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006d2:	2300      	movs	r3, #0
 80006d4:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	79db      	ldrb	r3, [r3, #7]
 80006da:	461a      	mov	r2, r3
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	791b      	ldrb	r3, [r3, #4]
 80006e0:	005b      	lsls	r3, r3, #1
 80006e2:	fa02 f303 	lsl.w	r3, r2, r3
 80006e6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	68da      	ldr	r2, [r3, #12]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	791b      	ldrb	r3, [r3, #4]
 80006f2:	005b      	lsls	r3, r3, #1
 80006f4:	2103      	movs	r1, #3
 80006f6:	fa01 f303 	lsl.w	r3, r1, r3
 80006fa:	43db      	mvns	r3, r3
 80006fc:	4619      	mov	r1, r3
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	400a      	ands	r2, r1
 8000704:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	68d9      	ldr	r1, [r3, #12]
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	697a      	ldr	r2, [r7, #20]
 8000712:	430a      	orrs	r2, r1
 8000714:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000716:	2300      	movs	r3, #0
 8000718:	617b      	str	r3, [r7, #20]

	//4. configure optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	7a1b      	ldrb	r3, [r3, #8]
 800071e:	461a      	mov	r2, r3
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	791b      	ldrb	r3, [r3, #4]
 8000724:	fa02 f303 	lsl.w	r3, r2, r3
 8000728:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	685a      	ldr	r2, [r3, #4]
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	791b      	ldrb	r3, [r3, #4]
 8000734:	4619      	mov	r1, r3
 8000736:	2301      	movs	r3, #1
 8000738:	408b      	lsls	r3, r1
 800073a:	43db      	mvns	r3, r3
 800073c:	4619      	mov	r1, r3
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	400a      	ands	r2, r1
 8000744:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	6859      	ldr	r1, [r3, #4]
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	697a      	ldr	r2, [r7, #20]
 8000752:	430a      	orrs	r2, r1
 8000754:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTF)
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	795b      	ldrb	r3, [r3, #5]
 800075a:	2b02      	cmp	r3, #2
 800075c:	d131      	bne.n	80007c2 <GPIO_Init+0x326>
	{
		//configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	791b      	ldrb	r3, [r3, #4]
 8000762:	08db      	lsrs	r3, r3, #3
 8000764:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	791b      	ldrb	r3, [r3, #4]
 800076a:	f003 0307 	and.w	r3, r3, #7
 800076e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << ( 4 * temp2 ) );
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	7c3a      	ldrb	r2, [r7, #16]
 8000776:	3208      	adds	r2, #8
 8000778:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800077c:	7bfb      	ldrb	r3, [r7, #15]
 800077e:	009b      	lsls	r3, r3, #2
 8000780:	220f      	movs	r2, #15
 8000782:	fa02 f303 	lsl.w	r3, r2, r3
 8000786:	43db      	mvns	r3, r3
 8000788:	4618      	mov	r0, r3
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	7c3a      	ldrb	r2, [r7, #16]
 8000790:	4001      	ands	r1, r0
 8000792:	3208      	adds	r2, #8
 8000794:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= ( pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	7c3a      	ldrb	r2, [r7, #16]
 800079e:	3208      	adds	r2, #8
 80007a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	7a5b      	ldrb	r3, [r3, #9]
 80007a8:	461a      	mov	r2, r3
 80007aa:	7bfb      	ldrb	r3, [r7, #15]
 80007ac:	009b      	lsls	r3, r3, #2
 80007ae:	fa02 f303 	lsl.w	r3, r2, r3
 80007b2:	4618      	mov	r0, r3
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	7c3a      	ldrb	r2, [r7, #16]
 80007ba:	4301      	orrs	r1, r0
 80007bc:	3208      	adds	r2, #8
 80007be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007c2:	bf00      	nop
 80007c4:	371c      	adds	r7, #28
 80007c6:	46bd      	mov	sp, r7
 80007c8:	bc80      	pop	{r7}
 80007ca:	4770      	bx	lr
 80007cc:	40023800 	.word	0x40023800
 80007d0:	40013800 	.word	0x40013800
 80007d4:	40013c00 	.word	0x40013c00

080007d8 <GPIO_ReadFromInputPin>:
 *
 * @Note			-
 *
 *******************************************************************************/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007d8:	b480      	push	{r7}
 80007da:	b085      	sub	sp, #20
 80007dc:	af00      	add	r7, sp, #0
 80007de:	6078      	str	r0, [r7, #4]
 80007e0:	460b      	mov	r3, r1
 80007e2:	70fb      	strb	r3, [r7, #3]
	uint8_t value;

	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001 ) ;
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	691a      	ldr	r2, [r3, #16]
 80007e8:	78fb      	ldrb	r3, [r7, #3]
 80007ea:	fa22 f303 	lsr.w	r3, r2, r3
 80007ee:	b2db      	uxtb	r3, r3
 80007f0:	f003 0301 	and.w	r3, r3, #1
 80007f4:	73fb      	strb	r3, [r7, #15]

	return value;
 80007f6:	7bfb      	ldrb	r3, [r7, #15]
}
 80007f8:	4618      	mov	r0, r3
 80007fa:	3714      	adds	r7, #20
 80007fc:	46bd      	mov	sp, r7
 80007fe:	bc80      	pop	{r7}
 8000800:	4770      	bx	lr

08000802 <GPIO_ToggleOutputPin>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000802:	b480      	push	{r7}
 8000804:	b083      	sub	sp, #12
 8000806:	af00      	add	r7, sp, #0
 8000808:	6078      	str	r0, [r7, #4]
 800080a:	460b      	mov	r3, r1
 800080c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber );
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	695b      	ldr	r3, [r3, #20]
 8000812:	78fa      	ldrb	r2, [r7, #3]
 8000814:	2101      	movs	r1, #1
 8000816:	fa01 f202 	lsl.w	r2, r1, r2
 800081a:	405a      	eors	r2, r3
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	615a      	str	r2, [r3, #20]
}
 8000820:	bf00      	nop
 8000822:	370c      	adds	r7, #12
 8000824:	46bd      	mov	sp, r7
 8000826:	bc80      	pop	{r7}
 8000828:	4770      	bx	lr
	...

0800082c <__libc_init_array>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	4d0d      	ldr	r5, [pc, #52]	@ (8000864 <__libc_init_array+0x38>)
 8000830:	4c0d      	ldr	r4, [pc, #52]	@ (8000868 <__libc_init_array+0x3c>)
 8000832:	1b64      	subs	r4, r4, r5
 8000834:	10a4      	asrs	r4, r4, #2
 8000836:	2600      	movs	r6, #0
 8000838:	42a6      	cmp	r6, r4
 800083a:	d109      	bne.n	8000850 <__libc_init_array+0x24>
 800083c:	4d0b      	ldr	r5, [pc, #44]	@ (800086c <__libc_init_array+0x40>)
 800083e:	4c0c      	ldr	r4, [pc, #48]	@ (8000870 <__libc_init_array+0x44>)
 8000840:	f000 f818 	bl	8000874 <_init>
 8000844:	1b64      	subs	r4, r4, r5
 8000846:	10a4      	asrs	r4, r4, #2
 8000848:	2600      	movs	r6, #0
 800084a:	42a6      	cmp	r6, r4
 800084c:	d105      	bne.n	800085a <__libc_init_array+0x2e>
 800084e:	bd70      	pop	{r4, r5, r6, pc}
 8000850:	f855 3b04 	ldr.w	r3, [r5], #4
 8000854:	4798      	blx	r3
 8000856:	3601      	adds	r6, #1
 8000858:	e7ee      	b.n	8000838 <__libc_init_array+0xc>
 800085a:	f855 3b04 	ldr.w	r3, [r5], #4
 800085e:	4798      	blx	r3
 8000860:	3601      	adds	r6, #1
 8000862:	e7f2      	b.n	800084a <__libc_init_array+0x1e>
 8000864:	0800088c 	.word	0x0800088c
 8000868:	0800088c 	.word	0x0800088c
 800086c:	0800088c 	.word	0x0800088c
 8000870:	08000890 	.word	0x08000890

08000874 <_init>:
 8000874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000876:	bf00      	nop
 8000878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800087a:	bc08      	pop	{r3}
 800087c:	469e      	mov	lr, r3
 800087e:	4770      	bx	lr

08000880 <_fini>:
 8000880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000882:	bf00      	nop
 8000884:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000886:	bc08      	pop	{r3}
 8000888:	469e      	mov	lr, r3
 800088a:	4770      	bx	lr
