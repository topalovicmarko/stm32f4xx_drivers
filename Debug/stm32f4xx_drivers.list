
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008a4  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a38  08000a40  00001a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a38  08000a38  00001a40  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000a38  08000a38  00001a40  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000a38  08000a40  00001a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a38  08000a38  00001a38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a3c  08000a3c  00001a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a40  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a40  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00001a40  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a76  00000000  00000000  00001a6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002cd  00000000  00000000  000024e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000027b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008c  00000000  00000000  00002878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001fb2  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010f1  00000000  00000000  000048b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008e2e  00000000  00000000  000059a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000e7d5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0000e818  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  0000eaa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000a20 	.word	0x08000a20

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000a20 	.word	0x08000a20

080001d4 <delay>:

#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	// this will introduce ~200ms delay when system clock (sysclk) is 16MHZ
	for(uint32_t i = 0 ; i < 500000/2 ; i++);
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	e002      	b.n	80001e6 <delay+0x12>
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	3301      	adds	r3, #1
 80001e4:	607b      	str	r3, [r7, #4]
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	4a04      	ldr	r2, [pc, #16]	@ (80001fc <delay+0x28>)
 80001ea:	4293      	cmp	r3, r2
 80001ec:	d9f8      	bls.n	80001e0 <delay+0xc>
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	bc80      	pop	{r7}
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	0003d08f 	.word	0x0003d08f

08000200 <main>:

int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	b086      	sub	sp, #24
 8000204:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GpioBtn;
	memset(&GpioLed,0,sizeof(GpioLed));
 8000206:	f107 030c 	add.w	r3, r7, #12
 800020a:	220c      	movs	r2, #12
 800020c:	2100      	movs	r1, #0
 800020e:	4618      	mov	r0, r3
 8000210:	f000 fbda 	bl	80009c8 <memset>
	memset(&GpioBtn,0,sizeof(GpioBtn));
 8000214:	463b      	mov	r3, r7
 8000216:	220c      	movs	r2, #12
 8000218:	2100      	movs	r1, #0
 800021a:	4618      	mov	r0, r3
 800021c:	f000 fbd4 	bl	80009c8 <memset>

	//This is Led gpio configuration
	GpioLed.pGPIOx = GPIOA;
 8000220:	4b18      	ldr	r3, [pc, #96]	@ (8000284 <main+0x84>)
 8000222:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 8000224:	2308      	movs	r3, #8
 8000226:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000228:	2301      	movs	r3, #1
 800022a:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022c:	2302      	movs	r3, #2
 800022e:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000230:	2300      	movs	r3, #0
 8000232:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000234:	2300      	movs	r3, #0
 8000236:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000238:	2101      	movs	r1, #1
 800023a:	4812      	ldr	r0, [pc, #72]	@ (8000284 <main+0x84>)
 800023c:	f000 f860 	bl	8000300 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000240:	f107 030c 	add.w	r3, r7, #12
 8000244:	4618      	mov	r0, r3
 8000246:	f000 f943 	bl	80004d0 <GPIO_Init>

	//This is btn gpio configuration
	GpioBtn.pGPIOx = GPIOB;
 800024a:	4b0f      	ldr	r3, [pc, #60]	@ (8000288 <main+0x88>)
 800024c:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800024e:	230c      	movs	r3, #12
 8000250:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000252:	2304      	movs	r3, #4
 8000254:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000256:	2302      	movs	r3, #2
 8000258:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800025a:	2301      	movs	r3, #1
 800025c:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 800025e:	2101      	movs	r1, #1
 8000260:	4809      	ldr	r0, [pc, #36]	@ (8000288 <main+0x88>)
 8000262:	f000 f84d 	bl	8000300 <GPIO_PeriClockControl>

	GPIO_Init(&GpioBtn);
 8000266:	463b      	mov	r3, r7
 8000268:	4618      	mov	r0, r3
 800026a:	f000 f931 	bl	80004d0 <GPIO_Init>

	//IRQ configurations

	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRI15);
 800026e:	210f      	movs	r1, #15
 8000270:	2028      	movs	r0, #40	@ 0x28
 8000272:	f000 fb5f 	bl	8000934 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 8000276:	2101      	movs	r1, #1
 8000278:	2028      	movs	r0, #40	@ 0x28
 800027a:	f000 fadb 	bl	8000834 <GPIO_IRQInterruptConfig>

	while(1);
 800027e:	bf00      	nop
 8000280:	e7fd      	b.n	800027e <main+0x7e>
 8000282:	bf00      	nop
 8000284:	40020000 	.word	0x40020000
 8000288:	40020400 	.word	0x40020400

0800028c <EXTI15_10_IRQHandler>:

	return 0;
}

void EXTI15_10_IRQHandler(void)
	{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
		delay();	//200ms debouncing
 8000290:	f7ff ffa0 	bl	80001d4 <delay>
		GPIO_IRQHandling(GPIO_PIN_NO_12);		//clear the pending event from exti line
 8000294:	200c      	movs	r0, #12
 8000296:	f000 fb77 	bl	8000988 <GPIO_IRQHandling>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_8);
 800029a:	2108      	movs	r1, #8
 800029c:	4802      	ldr	r0, [pc, #8]	@ (80002a8 <EXTI15_10_IRQHandler+0x1c>)
 800029e:	f000 fab5 	bl	800080c <GPIO_ToggleOutputPin>
	}
 80002a2:	bf00      	nop
 80002a4:	bd80      	pop	{r7, pc}
 80002a6:	bf00      	nop
 80002a8:	40020000 	.word	0x40020000

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	@ (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	@ (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	@ (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	@ (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	@ (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	@ (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 fb7d 	bl	80009d8 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80002de:	f7ff ff8f 	bl	8000200 <main>

080002e2 <LoopForever>:

LoopForever:
  b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f0:	08000a40 	.word	0x08000a40
  ldr r2, =_sbss
 80002f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f8:	2000001c 	.word	0x2000001c

080002fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC_IRQHandler>
	...

08000300 <GPIO_PeriClockControl>:
 *
 * @Note			-	none
 *
 *******************************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000300:	b480      	push	{r7}
 8000302:	b083      	sub	sp, #12
 8000304:	af00      	add	r7, sp, #0
 8000306:	6078      	str	r0, [r7, #4]
 8000308:	460b      	mov	r3, r1
 800030a:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 800030c:	78fb      	ldrb	r3, [r7, #3]
 800030e:	2b01      	cmp	r3, #1
 8000310:	d162      	bne.n	80003d8 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a64      	ldr	r2, [pc, #400]	@ (80004a8 <GPIO_PeriClockControl+0x1a8>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800031a:	4b64      	ldr	r3, [pc, #400]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800031c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031e:	4a63      	ldr	r2, [pc, #396]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000320:	f043 0301 	orr.w	r3, r3, #1
 8000324:	6313      	str	r3, [r2, #48]	@ 0x30
				}else if (pGPIOx == GPIOI)
				{
					GPIOI_PCLK_DI();
				}
	}
}
 8000326:	e0b9      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a61      	ldr	r2, [pc, #388]	@ (80004b0 <GPIO_PeriClockControl+0x1b0>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d106      	bne.n	800033e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000330:	4b5e      	ldr	r3, [pc, #376]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000332:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000334:	4a5d      	ldr	r2, [pc, #372]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000336:	f043 0302 	orr.w	r3, r3, #2
 800033a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800033c:	e0ae      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a5c      	ldr	r2, [pc, #368]	@ (80004b4 <GPIO_PeriClockControl+0x1b4>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000346:	4b59      	ldr	r3, [pc, #356]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034a:	4a58      	ldr	r2, [pc, #352]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800034c:	f043 0304 	orr.w	r3, r3, #4
 8000350:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000352:	e0a3      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a58      	ldr	r2, [pc, #352]	@ (80004b8 <GPIO_PeriClockControl+0x1b8>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800035c:	4b53      	ldr	r3, [pc, #332]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000360:	4a52      	ldr	r2, [pc, #328]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000362:	f043 0308 	orr.w	r3, r3, #8
 8000366:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000368:	e098      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a53      	ldr	r2, [pc, #332]	@ (80004bc <GPIO_PeriClockControl+0x1bc>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d106      	bne.n	8000380 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000372:	4b4e      	ldr	r3, [pc, #312]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000376:	4a4d      	ldr	r2, [pc, #308]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000378:	f043 0310 	orr.w	r3, r3, #16
 800037c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037e:	e08d      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a4f      	ldr	r2, [pc, #316]	@ (80004c0 <GPIO_PeriClockControl+0x1c0>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000388:	4b48      	ldr	r3, [pc, #288]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038c:	4a47      	ldr	r2, [pc, #284]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800038e:	f043 0320 	orr.w	r3, r3, #32
 8000392:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000394:	e082      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a4a      	ldr	r2, [pc, #296]	@ (80004c4 <GPIO_PeriClockControl+0x1c4>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800039e:	4b43      	ldr	r3, [pc, #268]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a2:	4a42      	ldr	r2, [pc, #264]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003a8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003aa:	e077      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a46      	ldr	r2, [pc, #280]	@ (80004c8 <GPIO_PeriClockControl+0x1c8>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003b4:	4b3d      	ldr	r3, [pc, #244]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b8:	4a3c      	ldr	r2, [pc, #240]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003be:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c0:	e06c      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a41      	ldr	r2, [pc, #260]	@ (80004cc <GPIO_PeriClockControl+0x1cc>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d168      	bne.n	800049c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003ca:	4b38      	ldr	r3, [pc, #224]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ce:	4a37      	ldr	r2, [pc, #220]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003d0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003d4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d6:	e061      	b.n	800049c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a33      	ldr	r2, [pc, #204]	@ (80004a8 <GPIO_PeriClockControl+0x1a8>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d106      	bne.n	80003ee <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 80003e0:	4b32      	ldr	r3, [pc, #200]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e4:	4a31      	ldr	r2, [pc, #196]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003e6:	f023 0301 	bic.w	r3, r3, #1
 80003ea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ec:	e056      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOB)
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a2f      	ldr	r2, [pc, #188]	@ (80004b0 <GPIO_PeriClockControl+0x1b0>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d106      	bne.n	8000404 <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 80003f6:	4b2d      	ldr	r3, [pc, #180]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fa:	4a2c      	ldr	r2, [pc, #176]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 80003fc:	f023 0302 	bic.w	r3, r3, #2
 8000400:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000402:	e04b      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOC)
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a2b      	ldr	r2, [pc, #172]	@ (80004b4 <GPIO_PeriClockControl+0x1b4>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d106      	bne.n	800041a <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 800040c:	4b27      	ldr	r3, [pc, #156]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000410:	4a26      	ldr	r2, [pc, #152]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000412:	f023 0304 	bic.w	r3, r3, #4
 8000416:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000418:	e040      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOD)
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4a26      	ldr	r2, [pc, #152]	@ (80004b8 <GPIO_PeriClockControl+0x1b8>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d106      	bne.n	8000430 <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 8000422:	4b22      	ldr	r3, [pc, #136]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000424:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000426:	4a21      	ldr	r2, [pc, #132]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000428:	f023 0308 	bic.w	r3, r3, #8
 800042c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800042e:	e035      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOE)
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	4a22      	ldr	r2, [pc, #136]	@ (80004bc <GPIO_PeriClockControl+0x1bc>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d106      	bne.n	8000446 <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 8000438:	4b1c      	ldr	r3, [pc, #112]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800043a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043c:	4a1b      	ldr	r2, [pc, #108]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800043e:	f023 0310 	bic.w	r3, r3, #16
 8000442:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000444:	e02a      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOF)
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4a1d      	ldr	r2, [pc, #116]	@ (80004c0 <GPIO_PeriClockControl+0x1c0>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d106      	bne.n	800045c <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 800044e:	4b17      	ldr	r3, [pc, #92]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000452:	4a16      	ldr	r2, [pc, #88]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000454:	f023 0320 	bic.w	r3, r3, #32
 8000458:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045a:	e01f      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOG)
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	4a19      	ldr	r2, [pc, #100]	@ (80004c4 <GPIO_PeriClockControl+0x1c4>)
 8000460:	4293      	cmp	r3, r2
 8000462:	d106      	bne.n	8000472 <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 8000464:	4b11      	ldr	r3, [pc, #68]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000466:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000468:	4a10      	ldr	r2, [pc, #64]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800046a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800046e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000470:	e014      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOH)
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	4a14      	ldr	r2, [pc, #80]	@ (80004c8 <GPIO_PeriClockControl+0x1c8>)
 8000476:	4293      	cmp	r3, r2
 8000478:	d106      	bne.n	8000488 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 800047a:	4b0c      	ldr	r3, [pc, #48]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 800047c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800047e:	4a0b      	ldr	r2, [pc, #44]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000480:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000484:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000486:	e009      	b.n	800049c <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOI)
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	4a10      	ldr	r2, [pc, #64]	@ (80004cc <GPIO_PeriClockControl+0x1cc>)
 800048c:	4293      	cmp	r3, r2
 800048e:	d105      	bne.n	800049c <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 8000490:	4b06      	ldr	r3, [pc, #24]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000492:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000494:	4a05      	ldr	r2, [pc, #20]	@ (80004ac <GPIO_PeriClockControl+0x1ac>)
 8000496:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800049a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800049c:	bf00      	nop
 800049e:	370c      	adds	r7, #12
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bc80      	pop	{r7}
 80004a4:	4770      	bx	lr
 80004a6:	bf00      	nop
 80004a8:	40020000 	.word	0x40020000
 80004ac:	40023800 	.word	0x40023800
 80004b0:	40020400 	.word	0x40020400
 80004b4:	40020800 	.word	0x40020800
 80004b8:	40020c00 	.word	0x40020c00
 80004bc:	40021000 	.word	0x40021000
 80004c0:	40021400 	.word	0x40021400
 80004c4:	40021800 	.word	0x40021800
 80004c8:	40021c00 	.word	0x40021c00
 80004cc:	40022000 	.word	0x40022000

080004d0 <GPIO_Init>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle )
{
 80004d0:	b480      	push	{r7}
 80004d2:	b087      	sub	sp, #28
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;	//temp. register
 80004d8:	2300      	movs	r3, #0
 80004da:	617b      	str	r3, [r7, #20]

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b03      	cmp	r3, #3
 80004e2:	d820      	bhi.n	8000526 <GPIO_Init+0x56>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	795b      	ldrb	r3, [r3, #5]
 80004e8:	461a      	mov	r2, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	005b      	lsls	r3, r3, #1
 80004f0:	fa02 f303 	lsl.w	r3, r2, r3
 80004f4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	681a      	ldr	r2, [r3, #0]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	005b      	lsls	r3, r3, #1
 8000502:	2103      	movs	r1, #3
 8000504:	fa01 f303 	lsl.w	r3, r1, r3
 8000508:	43db      	mvns	r3, r3
 800050a:	4619      	mov	r1, r3
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	400a      	ands	r2, r1
 8000512:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;	//setting
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	6819      	ldr	r1, [r3, #0]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	697a      	ldr	r2, [r7, #20]
 8000520:	430a      	orrs	r2, r1
 8000522:	601a      	str	r2, [r3, #0]
 8000524:	e0cb      	b.n	80006be <GPIO_Init+0x1ee>
	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	795b      	ldrb	r3, [r3, #5]
 800052a:	2b04      	cmp	r3, #4
 800052c:	d117      	bne.n	800055e <GPIO_Init+0x8e>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800052e:	4b4b      	ldr	r3, [pc, #300]	@ (800065c <GPIO_Init+0x18c>)
 8000530:	68db      	ldr	r3, [r3, #12]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	4611      	mov	r1, r2
 800053e:	4a47      	ldr	r2, [pc, #284]	@ (800065c <GPIO_Init+0x18c>)
 8000540:	430b      	orrs	r3, r1
 8000542:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000544:	4b45      	ldr	r3, [pc, #276]	@ (800065c <GPIO_Init+0x18c>)
 8000546:	689b      	ldr	r3, [r3, #8]
 8000548:	687a      	ldr	r2, [r7, #4]
 800054a:	7912      	ldrb	r2, [r2, #4]
 800054c:	4611      	mov	r1, r2
 800054e:	2201      	movs	r2, #1
 8000550:	408a      	lsls	r2, r1
 8000552:	43d2      	mvns	r2, r2
 8000554:	4611      	mov	r1, r2
 8000556:	4a41      	ldr	r2, [pc, #260]	@ (800065c <GPIO_Init+0x18c>)
 8000558:	400b      	ands	r3, r1
 800055a:	6093      	str	r3, [r2, #8]
 800055c:	e035      	b.n	80005ca <GPIO_Init+0xfa>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	795b      	ldrb	r3, [r3, #5]
 8000562:	2b05      	cmp	r3, #5
 8000564:	d117      	bne.n	8000596 <GPIO_Init+0xc6>
		{
			//1. configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000566:	4b3d      	ldr	r3, [pc, #244]	@ (800065c <GPIO_Init+0x18c>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	4611      	mov	r1, r2
 8000576:	4a39      	ldr	r2, [pc, #228]	@ (800065c <GPIO_Init+0x18c>)
 8000578:	430b      	orrs	r3, r1
 800057a:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800057c:	4b37      	ldr	r3, [pc, #220]	@ (800065c <GPIO_Init+0x18c>)
 800057e:	68db      	ldr	r3, [r3, #12]
 8000580:	687a      	ldr	r2, [r7, #4]
 8000582:	7912      	ldrb	r2, [r2, #4]
 8000584:	4611      	mov	r1, r2
 8000586:	2201      	movs	r2, #1
 8000588:	408a      	lsls	r2, r1
 800058a:	43d2      	mvns	r2, r2
 800058c:	4611      	mov	r1, r2
 800058e:	4a33      	ldr	r2, [pc, #204]	@ (800065c <GPIO_Init+0x18c>)
 8000590:	400b      	ands	r3, r1
 8000592:	60d3      	str	r3, [r2, #12]
 8000594:	e019      	b.n	80005ca <GPIO_Init+0xfa>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	795b      	ldrb	r3, [r3, #5]
 800059a:	2b06      	cmp	r3, #6
 800059c:	d115      	bne.n	80005ca <GPIO_Init+0xfa>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800059e:	4b2f      	ldr	r3, [pc, #188]	@ (800065c <GPIO_Init+0x18c>)
 80005a0:	689b      	ldr	r3, [r3, #8]
 80005a2:	687a      	ldr	r2, [r7, #4]
 80005a4:	7912      	ldrb	r2, [r2, #4]
 80005a6:	4611      	mov	r1, r2
 80005a8:	2201      	movs	r2, #1
 80005aa:	408a      	lsls	r2, r1
 80005ac:	4611      	mov	r1, r2
 80005ae:	4a2b      	ldr	r2, [pc, #172]	@ (800065c <GPIO_Init+0x18c>)
 80005b0:	430b      	orrs	r3, r1
 80005b2:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80005b4:	4b29      	ldr	r3, [pc, #164]	@ (800065c <GPIO_Init+0x18c>)
 80005b6:	68db      	ldr	r3, [r3, #12]
 80005b8:	687a      	ldr	r2, [r7, #4]
 80005ba:	7912      	ldrb	r2, [r2, #4]
 80005bc:	4611      	mov	r1, r2
 80005be:	2201      	movs	r2, #1
 80005c0:	408a      	lsls	r2, r1
 80005c2:	4611      	mov	r1, r2
 80005c4:	4a25      	ldr	r2, [pc, #148]	@ (800065c <GPIO_Init+0x18c>)
 80005c6:	430b      	orrs	r3, r1
 80005c8:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	791b      	ldrb	r3, [r3, #4]
 80005ce:	089b      	lsrs	r3, r3, #2
 80005d0:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	f003 0303 	and.w	r3, r3, #3
 80005da:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4a1f      	ldr	r2, [pc, #124]	@ (8000660 <GPIO_Init+0x190>)
 80005e2:	4293      	cmp	r3, r2
 80005e4:	d04e      	beq.n	8000684 <GPIO_Init+0x1b4>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a1e      	ldr	r2, [pc, #120]	@ (8000664 <GPIO_Init+0x194>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d032      	beq.n	8000656 <GPIO_Init+0x186>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a1c      	ldr	r2, [pc, #112]	@ (8000668 <GPIO_Init+0x198>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d02b      	beq.n	8000652 <GPIO_Init+0x182>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a1b      	ldr	r2, [pc, #108]	@ (800066c <GPIO_Init+0x19c>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d024      	beq.n	800064e <GPIO_Init+0x17e>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a19      	ldr	r2, [pc, #100]	@ (8000670 <GPIO_Init+0x1a0>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d01d      	beq.n	800064a <GPIO_Init+0x17a>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a18      	ldr	r2, [pc, #96]	@ (8000674 <GPIO_Init+0x1a4>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d016      	beq.n	8000646 <GPIO_Init+0x176>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a16      	ldr	r2, [pc, #88]	@ (8000678 <GPIO_Init+0x1a8>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d00f      	beq.n	8000642 <GPIO_Init+0x172>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a15      	ldr	r2, [pc, #84]	@ (800067c <GPIO_Init+0x1ac>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d008      	beq.n	800063e <GPIO_Init+0x16e>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a13      	ldr	r2, [pc, #76]	@ (8000680 <GPIO_Init+0x1b0>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d101      	bne.n	800063a <GPIO_Init+0x16a>
 8000636:	2308      	movs	r3, #8
 8000638:	e025      	b.n	8000686 <GPIO_Init+0x1b6>
 800063a:	2300      	movs	r3, #0
 800063c:	e023      	b.n	8000686 <GPIO_Init+0x1b6>
 800063e:	2307      	movs	r3, #7
 8000640:	e021      	b.n	8000686 <GPIO_Init+0x1b6>
 8000642:	2306      	movs	r3, #6
 8000644:	e01f      	b.n	8000686 <GPIO_Init+0x1b6>
 8000646:	2305      	movs	r3, #5
 8000648:	e01d      	b.n	8000686 <GPIO_Init+0x1b6>
 800064a:	2304      	movs	r3, #4
 800064c:	e01b      	b.n	8000686 <GPIO_Init+0x1b6>
 800064e:	2303      	movs	r3, #3
 8000650:	e019      	b.n	8000686 <GPIO_Init+0x1b6>
 8000652:	2302      	movs	r3, #2
 8000654:	e017      	b.n	8000686 <GPIO_Init+0x1b6>
 8000656:	2301      	movs	r3, #1
 8000658:	e015      	b.n	8000686 <GPIO_Init+0x1b6>
 800065a:	bf00      	nop
 800065c:	40013c00 	.word	0x40013c00
 8000660:	40020000 	.word	0x40020000
 8000664:	40020400 	.word	0x40020400
 8000668:	40020800 	.word	0x40020800
 800066c:	40020c00 	.word	0x40020c00
 8000670:	40021000 	.word	0x40021000
 8000674:	40021400 	.word	0x40021400
 8000678:	40021800 	.word	0x40021800
 800067c:	40021c00 	.word	0x40021c00
 8000680:	40022000 	.word	0x40022000
 8000684:	2300      	movs	r3, #0
 8000686:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000688:	4b5d      	ldr	r3, [pc, #372]	@ (8000800 <GPIO_Init+0x330>)
 800068a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800068c:	4a5c      	ldr	r2, [pc, #368]	@ (8000800 <GPIO_Init+0x330>)
 800068e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000692:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000694:	7c7a      	ldrb	r2, [r7, #17]
 8000696:	7cbb      	ldrb	r3, [r7, #18]
 8000698:	009b      	lsls	r3, r3, #2
 800069a:	fa02 f103 	lsl.w	r1, r2, r3
 800069e:	4a59      	ldr	r2, [pc, #356]	@ (8000804 <GPIO_Init+0x334>)
 80006a0:	7cfb      	ldrb	r3, [r7, #19]
 80006a2:	3302      	adds	r3, #2
 80006a4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the exti interrupt delivery using IMR
		EXTI -> IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006a8:	4b57      	ldr	r3, [pc, #348]	@ (8000808 <GPIO_Init+0x338>)
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	687a      	ldr	r2, [r7, #4]
 80006ae:	7912      	ldrb	r2, [r2, #4]
 80006b0:	4611      	mov	r1, r2
 80006b2:	2201      	movs	r2, #1
 80006b4:	408a      	lsls	r2, r1
 80006b6:	4611      	mov	r1, r2
 80006b8:	4a53      	ldr	r2, [pc, #332]	@ (8000808 <GPIO_Init+0x338>)
 80006ba:	430b      	orrs	r3, r1
 80006bc:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 80006be:	2300      	movs	r3, #0
 80006c0:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = 0;
 80006c2:	2300      	movs	r3, #0
 80006c4:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	799b      	ldrb	r3, [r3, #6]
 80006ca:	461a      	mov	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	005b      	lsls	r3, r3, #1
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	689a      	ldr	r2, [r3, #8]
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	791b      	ldrb	r3, [r3, #4]
 80006e2:	005b      	lsls	r3, r3, #1
 80006e4:	2103      	movs	r1, #3
 80006e6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ea:	43db      	mvns	r3, r3
 80006ec:	4619      	mov	r1, r3
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	400a      	ands	r2, r1
 80006f4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	6899      	ldr	r1, [r3, #8]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	697a      	ldr	r2, [r7, #20]
 8000702:	430a      	orrs	r2, r1
 8000704:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	79db      	ldrb	r3, [r3, #7]
 800070e:	461a      	mov	r2, r3
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	791b      	ldrb	r3, [r3, #4]
 8000714:	005b      	lsls	r3, r3, #1
 8000716:	fa02 f303 	lsl.w	r3, r2, r3
 800071a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 <<  2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	68da      	ldr	r2, [r3, #12]
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	791b      	ldrb	r3, [r3, #4]
 8000726:	005b      	lsls	r3, r3, #1
 8000728:	2103      	movs	r1, #3
 800072a:	fa01 f303 	lsl.w	r3, r1, r3
 800072e:	43db      	mvns	r3, r3
 8000730:	4619      	mov	r1, r3
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	400a      	ands	r2, r1
 8000738:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	68d9      	ldr	r1, [r3, #12]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	697a      	ldr	r2, [r7, #20]
 8000746:	430a      	orrs	r2, r1
 8000748:	60da      	str	r2, [r3, #12]

	temp = 0;
 800074a:	2300      	movs	r3, #0
 800074c:	617b      	str	r3, [r7, #20]

	//4. configure optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	7a1b      	ldrb	r3, [r3, #8]
 8000752:	461a      	mov	r2, r3
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	791b      	ldrb	r3, [r3, #4]
 8000758:	fa02 f303 	lsl.w	r3, r2, r3
 800075c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);	//clearing
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	685a      	ldr	r2, [r3, #4]
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	791b      	ldrb	r3, [r3, #4]
 8000768:	4619      	mov	r1, r3
 800076a:	2301      	movs	r3, #1
 800076c:	408b      	lsls	r3, r1
 800076e:	43db      	mvns	r3, r3
 8000770:	4619      	mov	r1, r3
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	400a      	ands	r2, r1
 8000778:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	6859      	ldr	r1, [r3, #4]
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	697a      	ldr	r2, [r7, #20]
 8000786:	430a      	orrs	r2, r1
 8000788:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTF)
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	795b      	ldrb	r3, [r3, #5]
 800078e:	2b02      	cmp	r3, #2
 8000790:	d131      	bne.n	80007f6 <GPIO_Init+0x326>
	{
		//configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	791b      	ldrb	r3, [r3, #4]
 8000796:	08db      	lsrs	r3, r3, #3
 8000798:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	791b      	ldrb	r3, [r3, #4]
 800079e:	f003 0307 	and.w	r3, r3, #7
 80007a2:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << ( 4 * temp2 ) );
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	7c3a      	ldrb	r2, [r7, #16]
 80007aa:	3208      	adds	r2, #8
 80007ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007b0:	7bfb      	ldrb	r3, [r7, #15]
 80007b2:	009b      	lsls	r3, r3, #2
 80007b4:	220f      	movs	r2, #15
 80007b6:	fa02 f303 	lsl.w	r3, r2, r3
 80007ba:	43db      	mvns	r3, r3
 80007bc:	4618      	mov	r0, r3
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	7c3a      	ldrb	r2, [r7, #16]
 80007c4:	4001      	ands	r1, r0
 80007c6:	3208      	adds	r2, #8
 80007c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= ( pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	7c3a      	ldrb	r2, [r7, #16]
 80007d2:	3208      	adds	r2, #8
 80007d4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	7a5b      	ldrb	r3, [r3, #9]
 80007dc:	461a      	mov	r2, r3
 80007de:	7bfb      	ldrb	r3, [r7, #15]
 80007e0:	009b      	lsls	r3, r3, #2
 80007e2:	fa02 f303 	lsl.w	r3, r2, r3
 80007e6:	4618      	mov	r0, r3
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	7c3a      	ldrb	r2, [r7, #16]
 80007ee:	4301      	orrs	r1, r0
 80007f0:	3208      	adds	r2, #8
 80007f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007f6:	bf00      	nop
 80007f8:	371c      	adds	r7, #28
 80007fa:	46bd      	mov	sp, r7
 80007fc:	bc80      	pop	{r7}
 80007fe:	4770      	bx	lr
 8000800:	40023800 	.word	0x40023800
 8000804:	40013800 	.word	0x40013800
 8000808:	40013c00 	.word	0x40013c00

0800080c <GPIO_ToggleOutputPin>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800080c:	b480      	push	{r7}
 800080e:	b083      	sub	sp, #12
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
 8000814:	460b      	mov	r3, r1
 8000816:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber );
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	695b      	ldr	r3, [r3, #20]
 800081c:	78fa      	ldrb	r2, [r7, #3]
 800081e:	2101      	movs	r1, #1
 8000820:	fa01 f202 	lsl.w	r2, r1, r2
 8000824:	405a      	eors	r2, r3
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	615a      	str	r2, [r3, #20]
}
 800082a:	bf00      	nop
 800082c:	370c      	adds	r7, #12
 800082e:	46bd      	mov	sp, r7
 8000830:	bc80      	pop	{r7}
 8000832:	4770      	bx	lr

08000834 <GPIO_IRQInterruptConfig>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	4603      	mov	r3, r0
 800083c:	460a      	mov	r2, r1
 800083e:	71fb      	strb	r3, [r7, #7]
 8000840:	4613      	mov	r3, r2
 8000842:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000844:	79bb      	ldrb	r3, [r7, #6]
 8000846:	2b01      	cmp	r3, #1
 8000848:	d167      	bne.n	800091a <GPIO_IRQInterruptConfig+0xe6>
	{
		if(IRQNumber <= 31)
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b1f      	cmp	r3, #31
 800084e:	d80a      	bhi.n	8000866 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber);
 8000850:	4b34      	ldr	r3, [pc, #208]	@ (8000924 <GPIO_IRQInterruptConfig+0xf0>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	2101      	movs	r1, #1
 8000858:	fa01 f202 	lsl.w	r2, r1, r2
 800085c:	4611      	mov	r1, r2
 800085e:	4a31      	ldr	r2, [pc, #196]	@ (8000924 <GPIO_IRQInterruptConfig+0xf0>)
 8000860:	430b      	orrs	r3, r1
 8000862:	6013      	str	r3, [r2, #0]
				//program ICER2 register
				*NVIC_ICER3 |= ( 1 << IRQNumber % 64);
			}
		}
	}
}
 8000864:	e059      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)	//32 to 63
 8000866:	79fb      	ldrb	r3, [r7, #7]
 8000868:	2b1f      	cmp	r3, #31
 800086a:	d90f      	bls.n	800088c <GPIO_IRQInterruptConfig+0x58>
 800086c:	79fb      	ldrb	r3, [r7, #7]
 800086e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000870:	d80c      	bhi.n	800088c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << IRQNumber % 32);
 8000872:	4b2d      	ldr	r3, [pc, #180]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	79fa      	ldrb	r2, [r7, #7]
 8000878:	f002 021f 	and.w	r2, r2, #31
 800087c:	2101      	movs	r1, #1
 800087e:	fa01 f202 	lsl.w	r2, r1, r2
 8000882:	4611      	mov	r1, r2
 8000884:	4a28      	ldr	r2, [pc, #160]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 8000886:	430b      	orrs	r3, r1
 8000888:	6013      	str	r3, [r2, #0]
 800088a:	e046      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)	//64 to 95
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000890:	d90f      	bls.n	80008b2 <GPIO_IRQInterruptConfig+0x7e>
 8000892:	79fb      	ldrb	r3, [r7, #7]
 8000894:	2b5f      	cmp	r3, #95	@ 0x5f
 8000896:	d80c      	bhi.n	80008b2 <GPIO_IRQInterruptConfig+0x7e>
			*NVIC_ISER3 |= ( 1 << IRQNumber % 64);
 8000898:	4b24      	ldr	r3, [pc, #144]	@ (800092c <GPIO_IRQInterruptConfig+0xf8>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	79fa      	ldrb	r2, [r7, #7]
 800089e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	4611      	mov	r1, r2
 80008aa:	4a20      	ldr	r2, [pc, #128]	@ (800092c <GPIO_IRQInterruptConfig+0xf8>)
 80008ac:	430b      	orrs	r3, r1
 80008ae:	6013      	str	r3, [r2, #0]
 80008b0:	e033      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
			if(IRQNumber <= 31)
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b1f      	cmp	r3, #31
 80008b6:	d80a      	bhi.n	80008ce <GPIO_IRQInterruptConfig+0x9a>
				*NVIC_ISER0 |= ( 1 << IRQNumber);
 80008b8:	4b1a      	ldr	r3, [pc, #104]	@ (8000924 <GPIO_IRQInterruptConfig+0xf0>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	79fa      	ldrb	r2, [r7, #7]
 80008be:	2101      	movs	r1, #1
 80008c0:	fa01 f202 	lsl.w	r2, r1, r2
 80008c4:	4611      	mov	r1, r2
 80008c6:	4a17      	ldr	r2, [pc, #92]	@ (8000924 <GPIO_IRQInterruptConfig+0xf0>)
 80008c8:	430b      	orrs	r3, r1
 80008ca:	6013      	str	r3, [r2, #0]
}
 80008cc:	e025      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
			else if(IRQNumber > 31 && IRQNumber < 64)
 80008ce:	79fb      	ldrb	r3, [r7, #7]
 80008d0:	2b1f      	cmp	r3, #31
 80008d2:	d90f      	bls.n	80008f4 <GPIO_IRQInterruptConfig+0xc0>
 80008d4:	79fb      	ldrb	r3, [r7, #7]
 80008d6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008d8:	d80c      	bhi.n	80008f4 <GPIO_IRQInterruptConfig+0xc0>
				*NVIC_ISER1 |= ( 1 << IRQNumber % 32);
 80008da:	4b13      	ldr	r3, [pc, #76]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	79fa      	ldrb	r2, [r7, #7]
 80008e0:	f002 021f 	and.w	r2, r2, #31
 80008e4:	2101      	movs	r1, #1
 80008e6:	fa01 f202 	lsl.w	r2, r1, r2
 80008ea:	4611      	mov	r1, r2
 80008ec:	4a0e      	ldr	r2, [pc, #56]	@ (8000928 <GPIO_IRQInterruptConfig+0xf4>)
 80008ee:	430b      	orrs	r3, r1
 80008f0:	6013      	str	r3, [r2, #0]
 80008f2:	e012      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
			else if(IRQNumber >= 64 && IRQNumber < 96)
 80008f4:	79fb      	ldrb	r3, [r7, #7]
 80008f6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008f8:	d90f      	bls.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 80008fa:	79fb      	ldrb	r3, [r7, #7]
 80008fc:	2b5f      	cmp	r3, #95	@ 0x5f
 80008fe:	d80c      	bhi.n	800091a <GPIO_IRQInterruptConfig+0xe6>
				*NVIC_ICER3 |= ( 1 << IRQNumber % 64);
 8000900:	4b0b      	ldr	r3, [pc, #44]	@ (8000930 <GPIO_IRQInterruptConfig+0xfc>)
 8000902:	681b      	ldr	r3, [r3, #0]
 8000904:	79fa      	ldrb	r2, [r7, #7]
 8000906:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	4611      	mov	r1, r2
 8000912:	4a07      	ldr	r2, [pc, #28]	@ (8000930 <GPIO_IRQInterruptConfig+0xfc>)
 8000914:	430b      	orrs	r3, r1
 8000916:	6013      	str	r3, [r2, #0]
}
 8000918:	e7ff      	b.n	800091a <GPIO_IRQInterruptConfig+0xe6>
 800091a:	bf00      	nop
 800091c:	370c      	adds	r7, #12
 800091e:	46bd      	mov	sp, r7
 8000920:	bc80      	pop	{r7}
 8000922:	4770      	bx	lr
 8000924:	e000e100 	.word	0xe000e100
 8000928:	e000e104 	.word	0xe000e104
 800092c:	e000e10c 	.word	0xe000e10c
 8000930:	e000e18c 	.word	0xe000e18c

08000934 <GPIO_IRQPriorityConfig>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000934:	b480      	push	{r7}
 8000936:	b085      	sub	sp, #20
 8000938:	af00      	add	r7, sp, #0
 800093a:	4603      	mov	r3, r0
 800093c:	6039      	str	r1, [r7, #0]
 800093e:	71fb      	strb	r3, [r7, #7]
	//1. ipr register
	uint8_t iprx = IRQNumber / 4;
 8000940:	79fb      	ldrb	r3, [r7, #7]
 8000942:	089b      	lsrs	r3, r3, #2
 8000944:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000946:	79fb      	ldrb	r3, [r7, #7]
 8000948:	f003 0303 	and.w	r3, r3, #3
 800094c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED);
 800094e:	7bbb      	ldrb	r3, [r7, #14]
 8000950:	00db      	lsls	r3, r3, #3
 8000952:	b2db      	uxtb	r3, r3
 8000954:	3304      	adds	r3, #4
 8000956:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= ( IRQPriority << shift_amount );
 8000958:	7bfb      	ldrb	r3, [r7, #15]
 800095a:	009b      	lsls	r3, r3, #2
 800095c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000960:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000964:	6819      	ldr	r1, [r3, #0]
 8000966:	7b7b      	ldrb	r3, [r7, #13]
 8000968:	683a      	ldr	r2, [r7, #0]
 800096a:	409a      	lsls	r2, r3
 800096c:	7bfb      	ldrb	r3, [r7, #15]
 800096e:	009b      	lsls	r3, r3, #2
 8000970:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000974:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000978:	430a      	orrs	r2, r1
 800097a:	601a      	str	r2, [r3, #0]

}
 800097c:	bf00      	nop
 800097e:	3714      	adds	r7, #20
 8000980:	46bd      	mov	sp, r7
 8000982:	bc80      	pop	{r7}
 8000984:	4770      	bx	lr
	...

08000988 <GPIO_IRQHandling>:
 *
 * @Note			-
 *
 *******************************************************************************/
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000988:	b480      	push	{r7}
 800098a:	b083      	sub	sp, #12
 800098c:	af00      	add	r7, sp, #0
 800098e:	4603      	mov	r3, r0
 8000990:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 8000992:	4b0c      	ldr	r3, [pc, #48]	@ (80009c4 <GPIO_IRQHandling+0x3c>)
 8000994:	695b      	ldr	r3, [r3, #20]
 8000996:	79fa      	ldrb	r2, [r7, #7]
 8000998:	2101      	movs	r1, #1
 800099a:	fa01 f202 	lsl.w	r2, r1, r2
 800099e:	4013      	ands	r3, r2
 80009a0:	2b00      	cmp	r3, #0
 80009a2:	d009      	beq.n	80009b8 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 80009a4:	4b07      	ldr	r3, [pc, #28]	@ (80009c4 <GPIO_IRQHandling+0x3c>)
 80009a6:	695b      	ldr	r3, [r3, #20]
 80009a8:	79fa      	ldrb	r2, [r7, #7]
 80009aa:	2101      	movs	r1, #1
 80009ac:	fa01 f202 	lsl.w	r2, r1, r2
 80009b0:	4611      	mov	r1, r2
 80009b2:	4a04      	ldr	r2, [pc, #16]	@ (80009c4 <GPIO_IRQHandling+0x3c>)
 80009b4:	430b      	orrs	r3, r1
 80009b6:	6153      	str	r3, [r2, #20]
	}
}
 80009b8:	bf00      	nop
 80009ba:	370c      	adds	r7, #12
 80009bc:	46bd      	mov	sp, r7
 80009be:	bc80      	pop	{r7}
 80009c0:	4770      	bx	lr
 80009c2:	bf00      	nop
 80009c4:	40013c00 	.word	0x40013c00

080009c8 <memset>:
 80009c8:	4402      	add	r2, r0
 80009ca:	4603      	mov	r3, r0
 80009cc:	4293      	cmp	r3, r2
 80009ce:	d100      	bne.n	80009d2 <memset+0xa>
 80009d0:	4770      	bx	lr
 80009d2:	f803 1b01 	strb.w	r1, [r3], #1
 80009d6:	e7f9      	b.n	80009cc <memset+0x4>

080009d8 <__libc_init_array>:
 80009d8:	b570      	push	{r4, r5, r6, lr}
 80009da:	4d0d      	ldr	r5, [pc, #52]	@ (8000a10 <__libc_init_array+0x38>)
 80009dc:	4c0d      	ldr	r4, [pc, #52]	@ (8000a14 <__libc_init_array+0x3c>)
 80009de:	1b64      	subs	r4, r4, r5
 80009e0:	10a4      	asrs	r4, r4, #2
 80009e2:	2600      	movs	r6, #0
 80009e4:	42a6      	cmp	r6, r4
 80009e6:	d109      	bne.n	80009fc <__libc_init_array+0x24>
 80009e8:	4d0b      	ldr	r5, [pc, #44]	@ (8000a18 <__libc_init_array+0x40>)
 80009ea:	4c0c      	ldr	r4, [pc, #48]	@ (8000a1c <__libc_init_array+0x44>)
 80009ec:	f000 f818 	bl	8000a20 <_init>
 80009f0:	1b64      	subs	r4, r4, r5
 80009f2:	10a4      	asrs	r4, r4, #2
 80009f4:	2600      	movs	r6, #0
 80009f6:	42a6      	cmp	r6, r4
 80009f8:	d105      	bne.n	8000a06 <__libc_init_array+0x2e>
 80009fa:	bd70      	pop	{r4, r5, r6, pc}
 80009fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a00:	4798      	blx	r3
 8000a02:	3601      	adds	r6, #1
 8000a04:	e7ee      	b.n	80009e4 <__libc_init_array+0xc>
 8000a06:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0a:	4798      	blx	r3
 8000a0c:	3601      	adds	r6, #1
 8000a0e:	e7f2      	b.n	80009f6 <__libc_init_array+0x1e>
 8000a10:	08000a38 	.word	0x08000a38
 8000a14:	08000a38 	.word	0x08000a38
 8000a18:	08000a38 	.word	0x08000a38
 8000a1c:	08000a3c 	.word	0x08000a3c

08000a20 <_init>:
 8000a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a22:	bf00      	nop
 8000a24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a26:	bc08      	pop	{r3}
 8000a28:	469e      	mov	lr, r3
 8000a2a:	4770      	bx	lr

08000a2c <_fini>:
 8000a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2e:	bf00      	nop
 8000a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a32:	bc08      	pop	{r3}
 8000a34:	469e      	mov	lr, r3
 8000a36:	4770      	bx	lr
